---
- name: Deploy Docker Project
  hosts: all
  become: true

  vars:
      swap_file_path: /swapfile
      swap_file_size: 16G
      project_path: /home/{{ user_name }}/quizzer
      cloudflare_ddns_path: /home/{{ user_name }}/cloudflare-ddns

  tasks:
      - name: Assert all necessary items are available
        fail: msg="Bailing out. This play requires '{{ item }}'"
        when: "{{ item }} is undefined"
        loop:
            - user_name
            - host_base
            - acme_email
            - cloudflare_ddns_token
            - cloudflare_ddns_zone_id
            - cloudflare_ddns_subdomain

      - name: Check if swap exists
        stat:
            path: "{{ swap_file_path }}"
            get_checksum: false
        register: swap_file_check
        changed_when: false

      - name: Create swap
        shell: fallocate -l {{ swap_file_size }} {{ swap_file_path }}
        when: "not swap_file_check.stat.exists"

      - name: Fix permissions for swap
        file:
            path: "{{ swap_file_path }}"
            mode: 700
        when: "not swap_file_check.stat.exists"

      - name: Mark swap file
        shell: mkswap {{ swap_file_path }}
        when: "not swap_file_check.stat.exists"

      - name: Enable swap
        shell: swapon {{ swap_file_path }}
        when: "not swap_file_check.stat.exists"

      - name: Check swap
        shell: swapon --show
        register: swapon_check

      - name: Assert swap is connected
        assert:
            that: "'{{ swap_file_path }} in swapon_check.stdout'"

      - name: Update & upgrade all packages
        apt:
            name: "*"
            state: latest
            update_cache: true

      - name: Install aptitude
        apt:
            name: aptitude
            state: latest

      - name: Install required system packages
        apt:
            pkg:
                - apt-transport-https
                - ca-certificates
                - curl
                - software-properties-common
                - python3-pip
                - virtualenv
                - python3-setuptools
            state: latest

      - name: Add Docker GPG apt Key
        apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present

      - name: Add Docker Repository
        apt_repository:
            repo: deb https://download.docker.com/linux/ubuntu focal stable
            state: present

      - name: Update apt and install docker-ce
        apt:
            name: docker-ce
            state: latest
            update_cache: true

      - name: Install docker-compose-plugin
        apt:
            name: docker-compose-plugin
            state: present

      - name: Install Docker Module for Python
        pip:
            name: docker

      - name: Enable docker service
        systemd_service:
            name: docker
            enabled: true
            state: started

      - name: Download project from Git
        git:
            repo: https://github.com/6rayWa1cher/quizzer
            dest: "{{ project_path }}"
            force: true

      - name: Ensure cloudflare-ddns path is available
        file:
            path: "{{ cloudflare_ddns_path }}"
            state: directory

      - name: Configure forms-gen-angular/environment.prod.ts
        template:
            src: templates/angular/environment.prod.ts.j2
            dest: "{{ project_path }}/forms-gen-angular/src/environments/environment.prod.ts"

      - name: Configure .env
        template:
            src: templates/docker/.env.j2
            dest: "{{ project_path }}/.env"

      - name: Configure cloudflare-ddns/docker-compose.yml
        template:
            src: templates/cloudflare-ddns/docker-compose.yml.j2
            dest: "{{ cloudflare_ddns_path }}/docker-compose.yml"

      - name: Configure cloudflare-ddns/config.json
        template:
            src: templates/cloudflare-ddns/config.json.j2
            dest: "{{ cloudflare_ddns_path }}/config.json"

      - name: Install UFW
        apt:
            name: ufw
            state: present

      - name: Allow HTTP and HTTPS
        community.general.ufw:
            rule: allow
            port: "{{ item }}"
        loop:
            - 80
            - 443

      - name: Limit OpenSSH
        community.general.ufw:
            rule: limit
            name: OpenSSH

      - name: Enable UFW and deny everything
        community.general.ufw:
            policy: deny
            state: enabled

      - name: Deploy cloudflare agent
        include_role:
            name: my-docker
        vars:
            docker_compose_file: docker-compose.yml
            docker_compose_path: "{{ cloudflare_ddns_path }}"
            docker_compose_wait_seconds: 5
            docker_compose_list_of_services:
                - cloudflare-ddns

      - name: Deploy application
        include_role:
            name: my-docker
        vars:
            docker_compose_file: docker-compose.prod.yml
            docker_compose_path: "{{ project_path }}"
            docker_compose_wait_seconds: 45
            docker_compose_list_of_services:
                - traefik
                - postgres
                - rabbitmq
                - forms-rest
                - forms-db
                - angular

      - name: Clear build caches
        shell: docker builder prune -f
